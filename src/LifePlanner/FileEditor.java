package LifePlanner;

import com.sun.security.auth.module.NTSystem;
import java.io.File;
import java.io.IOException;
import org.ini4j.Ini;

/**
 *
 * @author Jafeth
 */
public class FileEditor extends javax.swing.JFrame
{
    private NTSystem NTSystem;
    EditFile file;
    NotesScreen notesScreen;
    
    /**
     * Creates new form FileReader
     * @param fileName The name of the file to be read.
     */
    public FileEditor(String fileName, NotesScreen notesScreen)
    {
        NTSystem = new com.sun.security.auth.module.NTSystem();
        this.notesScreen = notesScreen;
        file = new EditFile(fileName);
        initComponents();
        try
        {
            setStrings();
        }
        catch (Exception e)
        {
            System.out.println("Problem while reading in Strings for the new note screen." + e);
        }
        openFile();
    }
    
    private void setStrings() throws IOException
    {
        Ini ini = new Ini(new File("C:\\Users\\" + NTSystem.getName() + "\\Documents\\LifePlanner\\Settings\\LifeplannerSettings.ini"));
        Ini language = new Ini(new File("C:\\Users\\" + NTSystem.getName() + "\\Documents\\LifePlanner\\Settings\\Languages\\" + ini.get("header", "language") + ".ini"));
        doneButton.setText(language.get("newNote", "done"));
    }
    
    private void openFile()
    {
        try
        {
            String[] lines = file.openFile();
            
            for(int i = 0; i < lines.length; i++)
            {
                if(i == 0)
                {
                    this.titleField.setText(lines[i]);
                }
                else if(i == 1)
                {
                    
                }
                else
                {
                    this.mainTextArea.setText(this.mainTextArea.getText() + lines[i] + "\n");
                }
            }
            
        }
        catch (Exception e)
        {
            System.out.println("Problem when reading file." + e);
        }
    }
    
    private void writeFile() throws IOException
    {
        file.writeToFile(this.titleField.getText(), false);
        file.writeToFile("", true);
        file.writeToFile(this.mainTextArea.getText(), true);
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainTextArea = new javax.swing.JTextArea();
        doneButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainTextArea.setColumns(20);
        mainTextArea.setRows(5);
        jScrollPane1.setViewportView(mainTextArea);

        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(titleField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(doneButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doneButton, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        try
        {
            this.writeFile();
        }
        catch (IOException ex)
        {
            System.out.println("Problem while writing file." + ex);
        }
        this.notesScreen.refresh();
        this.dispose();
    }//GEN-LAST:event_doneButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doneButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea mainTextArea;
    private javax.swing.JTextField titleField;
    // End of variables declaration//GEN-END:variables
}
